Create a database called Inventory. EASY QUESTIONS • Create a collection called Products with attributes: ProductID, Name, Category, Stock, and Price. use Inventory • Insert 10 product documents into the Products collection. db.Products.insertMany([  { ProductID: 1, Name: "Laptop", Category: "Electronics", Stock: 15, Price: 599.99 }, { ProductID: 2, Name: "Smartphone", Category: "Electronics", Stock: 8, Price: 399.99 }, { ProductID: 3, Name: "Tablet", Category: "Electronics", Stock: 20, Price: 299.99 }, { ProductID: 4, Name: "Headphones", Category: "Accessories", Stock: 30, Price: 49.99 }, { ProductID: 5, Name: "Keyboard", Category: "Accessories", Stock: 25, Price: 29.99 }, { ProductID: 6, Name: "Monitor", Category: "Electronics", Stock: 12, Price: 199.99 }, { ProductID: 7, Name: "Mouse", Category: "Accessories", Stock: 18, Price: 9.99 }, { ProductID: 8, Name: "Charger", Category: "Electronics", Stock: 10, Price: 15.99 }, { ProductID: 9, Name: "Desk Lamp", Category: "Home", Stock: 5, Price: 20.99 }, { ProductID: 10, Name: "Webcam", Category: "Electronics", Stock: 14, Price: 79.99 }   ]) • Retrieve all products with stock greater than 10. db.Products.find({ Stock: { $gt: 10 } }) • Find all products from the 'Electronics' category. db.Products.find({ Category: "Electronics" }) • Update the price of the product with ProductID 7 to 19.99. db.Products.updateOne({ ProductID: 7 }, { $set: { Price: 19.99 } }) • Delete the product with ProductID 2. db.Products.deleteOne({ ProductID: 2 }) • Count how many products are in stock. db.Products.countDocuments({ Stock: { $gt: 0 } }) • Sort products by Price in descending order. db.Products.find().sort({ Price: -1 }) • Find products whose price is either 10 or 15. db.Products.find({ Price: { $in: [10, 15] } }) 